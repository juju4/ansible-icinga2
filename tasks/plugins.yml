
- include: debian.yml
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- include: redhat.yml
  when: ansible_os_family == "RedHat" or ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

- file: dest="{{ np }}" state=directory mode=0755

## http://dns.measurement-factory.com/tools/nagios-plugins/check_zone_rrsig_expiration.html
- name: plugin dnssec expiration
  get_url: "url=http://dns.measurement-factory.com/tools/nagios-plugins/src/check_zone_rrsig_expiration dest={{ np }}/check_zone_rrsig_expiration mode=0755"

- name: download samweather plugin
  get_url: url=https://raw.githubusercontent.com/tuxthepenguin84/sam-weather/master/samweather dest={{ np }}/samweather mode=0755

## https://exchange.nagios.org/directory/Plugins/Email-and-Groupware/check_rbl-2Epl/details
- name: check_rbl.pl
  get_url: url="https://exchange.nagios.org/components/com_mtree/attachment.php?link_id=1355&cf_id=24" dest={{ np }}/check_rbl.pl mode=0755 validate_certs=False

## https://github.com/sivel/speedtest-cli
- name: check_speedtest-cli
  #get_url: url="https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest_cli.py" dest={{ np }}/check_speedtest_cli.py mode=0755
  get_url: url="https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py" dest={{ np }}/check_speedtest_cli.py mode=0755

## https://exchange.nagios.org/directory/Plugins/Network-Connections,-Stats-and-Bandwidth/check_iperf/details
- name: check_iperf
  get_url: url="https://exchange.nagios.org/components/com_mtree/attachment.php?link_id=1446&cf_id=24" dest={{ np }}/check_iperf.pl mode=0755 validate_certs=False

- block:
    - name: download extra plugins
      get_url: "url={{ item.u }} dest={{ np }}/{{ item.d }} mode=0755 checksum={{ item.c }}"
      with_items: "{{ icinga2_plugins_extra }}"
  when: icinga2_plugins_extra is defined and icinga2_plugins_extra != []

- name: add dns service
  blockinfile:
    dest: /etc/icinga2/conf.d/services.conf
    block: |
      apply Service "DNS resolution - google" {
        import "generic-service"

        check_command = "dns"
        vars.dns_lookup = "$host_name$"
        vars.dns_server = "8.8.8.8"

        assign where "DNS-check" in host.groups

      }

      apply Service "DNS resolution - OpenDNS" {
        import "generic-service"

        check_command = "dns"
        vars.dns_lookup = "$host_name$"
        vars.dns_server = "208.67.222.222"

        assign where "DNS-check" in host.groups

      }

    marker: "# {mark} ANSIBLE MANAGED BLOCK - dns-check service"
    backup: yes

- name: add uptime service
  blockinfile:
    dest: /etc/icinga2/conf.d/services.conf
    block: |
      apply Service "uptime" {
        import "generic-service"

        check_command = "snmp"
        vars.snmp_oid = "1.3.6.1.2.1.1.3.0"
        vars.snmp_miblist = "DISMAN-EVENT-MIB"

        assign where host.vars.snmp_community != ""
      }

    marker: "# {mark} ANSIBLE MANAGED BLOCK - uptime service"
    backup: yes

